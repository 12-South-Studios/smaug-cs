<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Realm.Library.NCalcExt</name>
    </assembly>
    <members>
        <member name="T:Realm.Library.NCalcExt.CustomExpression">
            <summary>
            Class for setting up custom functions for the NCalc Expression Parser
            </summary>
        </member>
        <member name="P:Realm.Library.NCalcExt.CustomExpression.Name">
            <summary>
            Name of the expression
            </summary>
        </member>
        <member name="P:Realm.Library.NCalcExt.CustomExpression.RegexPattern">
            <summary>
            Regular expression match pattern
            </summary>
        </member>
        <member name="P:Realm.Library.NCalcExt.CustomExpression.Regex">
            <summary>
            Gets the regular expression object using the established pattern
            </summary>
        </member>
        <member name="P:Realm.Library.NCalcExt.CustomExpression.ExpressionFunction">
            <summary>
            Function call if a regex match is found (after replacement)
            </summary>
        </member>
        <member name="P:Realm.Library.NCalcExt.CustomExpression.ReplacementFunction">
            <summary>
            Function that performs the proper replacement of the string matched using 
            the Regex pattern with a syntax that NCalc can understand
            </summary>
        </member>
        <member name="T:Realm.Library.NCalcExt.ExpressionParser">
            <summary>
            Expression parser that utilizes the NCalc library (http://ncalc.codeplex.com/)
            to parse mathematical expressions in addition to custom-defined functions.
            </summary>
            <remarks>Examples of use can be found in the Realm.Library.NCalcExt.Tests project</remarks>
        </member>
        <member name="M:Realm.Library.NCalcExt.ExpressionParser.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Realm.Library.NCalcExt.ExpressionParser.#ctor(Realm.Library.NCalcExt.ExpressionTable)">
            <summary>
            Overloaded constructor
            </summary>
            <param name="exprTable"></param>
        </member>
        <member name="M:Realm.Library.NCalcExt.ExpressionParser.Execute(System.String)">
            <summary>
            Performs the actual execution of the expression parser
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Realm.Library.NCalcExt.ExpressionParser.ReplaceExpressionMatches(System.String)">
            <summary>
            Performs a regex match and replace for any custom expressions
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="T:Realm.Library.NCalcExt.ExpressionTable">
            <summary>
            Expression Table maintains a dictionary of expression objects
            </summary>
        </member>
        <member name="M:Realm.Library.NCalcExt.ExpressionTable.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Realm.Library.NCalcExt.ExpressionTable.Add(Realm.Library.NCalcExt.CustomExpression)">
            <summary>
            Attempts to add a custom expression to the expression table.  Checks for 
            name, keyword and regular expression conflicts.
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:Realm.Library.NCalcExt.ExpressionTable.Get(System.String)">
            <summary>
            Attempts to retrieve a custom expression from the expresison table. Checks
            for name, keyword and regular expression matches.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Realm.Library.NCalcExt.ExpressionTable.Keys">
            <summary>
            Gets an enumerable list of the Dictionary keys
            </summary>
        </member>
        <member name="P:Realm.Library.NCalcExt.ExpressionTable.Values">
            <summary>
            Gets an enumerable list of the Dictionary values
            </summary>
        </member>
    </members>
</doc>
