<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Realm.Library.Patterns.Command</name>
    </assembly>
    <members>
        <member name="T:Realm.Library.Patterns.Command.Command">
            <summary>
            Abstract Command class
            </summary>
        </member>
        <member name="T:Realm.Library.Patterns.Command.ICommand">
            <summary>
            Declares the contract for a command
            </summary>
        </member>
        <member name="M:Realm.Library.Patterns.Command.ICommand.Execute(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes the command using the given arguments
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Realm.Library.Patterns.Command.ICommand.Execute">
            <summary>
            Executes the command without arguments
            </summary>
        </member>
        <member name="M:Realm.Library.Patterns.Command.ICommand.CanExecute(System.Object)">
            <summary>
            Gets whether or not the object can execute the command
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Realm.Library.Patterns.Command.ICommand.Name">
            <summary>
            Gets the name of the command
            </summary>
        </member>
        <member name="P:Realm.Library.Patterns.Command.ICommand.Action">
            <summary>
            Gets the logging state of the command
            </summary>
        </member>
        <member name="M:Realm.Library.Patterns.Command.Command.#ctor(System.String,Realm.Library.Patterns.Command.LogAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Realm.Library.Patterns.Command.Command"/> class
            </summary>
            <param name="name">Name of the command</param>
            <param name="action">Log action to take when executed</param>
        </member>
        <member name="M:Realm.Library.Patterns.Command.Command.Execute(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes the command using the passed parameters
            </summary>
        </member>
        <member name="M:Realm.Library.Patterns.Command.Command.Execute">
            <summary>
            Executes the command
            </summary>
        </member>
        <member name="M:Realm.Library.Patterns.Command.Command.CanExecute(System.Object)">
            <summary>
            Determines if the command can be executed
            </summary>
        </member>
        <member name="P:Realm.Library.Patterns.Command.Command.Name">
            <summary>
            Gets the name of the command
            </summary>
        </member>
        <member name="P:Realm.Library.Patterns.Command.Command.Action">
            <summary>
            Gets the type of logging for this command
            </summary>
        </member>
        <member name="T:Realm.Library.Patterns.Command.CommandRepository">
            <summary>
            Defines a command repository class
            </summary>
        </member>
        <member name="T:Realm.Library.Patterns.Command.ICommandRepository">
            <summary>
            Declares the interface for a command repository
            </summary>
        </member>
        <member name="T:Realm.Library.Patterns.Command.LogAction">
            <summary>
            LogAction enumeration which is used to tell the game when to log the execution
            of a command-verb (example: Normal, Always, etc)
            </summary>
        </member>
        <member name="F:Realm.Library.Patterns.Command.LogAction.Never">
            <summary>
            Don't ever log, ever
            </summary>
        </member>
        <member name="F:Realm.Library.Patterns.Command.LogAction.Normal">
            <summary>
            Log only if told to log
            </summary>
        </member>
        <member name="F:Realm.Library.Patterns.Command.LogAction.Always">
            <summary>
            Always log this
            </summary>
        </member>
    </members>
</doc>
