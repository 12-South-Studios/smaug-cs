<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Realm.Library.Network</name>
    </assembly>
    <members>
        <member name="T:Realm.Library.Network.IFormatter">
            <summary>
            Defines the contract for a formatter object
            </summary>
        </member>
        <member name="M:Realm.Library.Network.IFormatter.Format(System.String)">
            <summary>
            Formats the source string
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Realm.Library.Network.ITcpUserRepository">
            <summary>
            Defines the contract for a TcpUserRepository
            </summary>
        </member>
        <member name="T:Realm.Library.Network.ITcpClientWrapper">
            <summary>
            Defines the contract for a TcpClient wrapper
            </summary>
        </member>
        <member name="M:Realm.Library.Network.ITcpClientWrapper.WriteToBuffer(System.String)">
            <summary>
            Writes a given message to the buffer which will be queued to send to the client stream.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.ITcpClientWrapper.IpAddress">
            <summary>
            Gets the IpAddress of the connected user
            </summary>
        </member>
        <member name="P:Realm.Library.Network.ITcpClientWrapper.ConnectedOn">
            <summary>
            Gets the datetime when a connection occurred
            </summary>
        </member>
        <member name="T:Realm.Library.Network.ITcpServer">
            <summary>
            Defines the contract for a Tcp Server
            </summary>
        </member>
        <member name="E:Realm.Library.Network.ITcpServer.OnTcpUserStatusChanged">
            <summary>
            Event on a TcpUser status change
            </summary>
        </member>
        <member name="E:Realm.Library.Network.ITcpServer.OnTcpServerStatusChanged">
            <summary>
            Event on a TcpServer status change
            </summary>
        </member>
        <member name="E:Realm.Library.Network.ITcpServer.OnNetworkMessageReceived">
            <summary>
            Event on a TcpServer status change
            </summary>
        </member>
        <member name="T:Realm.Library.Network.ITcpUser">
            <summary>
            Defines the contract for Tcp Users
            </summary>
        </member>
        <member name="M:Realm.Library.Network.ITcpUser.OnConnect">
            <summary>
            Handles the connection
            </summary>
        </member>
        <member name="M:Realm.Library.Network.ITcpUser.Disconnect">
            <summary>
            Disconnects the user from the connected socket
            </summary>
        </member>
        <member name="P:Realm.Library.Network.ITcpUser.Id">
            <summary>
            Gets the unique identifier of this user
            </summary>
        </member>
        <member name="T:Realm.Library.Network.Mxp.MxpEntity">
            <summary>
            Defines an entity for the Mxp framework
            </summary>
        </member>
        <member name="M:Realm.Library.Network.Mxp.MxpEntity.#ctor(System.Int64,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Realm.Library.Network.Mxp.MxpEntity.ToString">
            <summary>
            Override ToString to create the actual mxp entity value
            </summary>
            <returns></returns>
        </member>
        <member name="P:Realm.Library.Network.Mxp.MxpEntity.Value">
            <summary>
            Gets the value of the entity string
            </summary>
        </member>
        <member name="T:Realm.Library.Network.Mxp.MxpEntityRepository">
            <summary>
            Defines a repository for MxpEntity objects
            </summary>
        </member>
        <member name="T:Realm.Library.Network.Mxp.MxpExtensions">
             <summary>
            
             </summary>
        </member>
        <member name="M:Realm.Library.Network.Mxp.MxpExtensions.MxpTag(System.String,System.Object[])">
            <summary>
            Converts the string into a Mxp Tag
            </summary>
        </member>
        <member name="M:Realm.Library.Network.Mxp.MxpExtensions.MxpAmp">
            <summary>
            Gets an ampersand in Mxp format
            </summary>
        </member>
        <member name="M:Realm.Library.Network.Mxp.MxpExtensions.MxpBeg">
            <summary>
            Gets the beginning of a mxp tag
            </summary>
        </member>
        <member name="M:Realm.Library.Network.Mxp.MxpExtensions.MxpEnd">
            <summary>
            Gets the end of a mxp tag
            </summary>
        </member>
        <member name="M:Realm.Library.Network.Mxp.MxpExtensions.MxpMode(System.Int32)">
            <summary>
            Gets the enable mxp mode string
            </summary>
        </member>
        <member name="M:Realm.Library.Network.Mxp.MxpExtensions.SendMxpNegotiation(System.IO.Stream)">
            <summary>
            Sends mxp negotiation to the given stream
            </summary>
        </member>
        <member name="M:Realm.Library.Network.Mxp.MxpExtensions.EnableMxp(Realm.Library.Network.ITcpUser,System.IO.Stream)">
            <summary>
            Sends the enable mxp negotitation to the user
            </summary>
            <param name="tcpUser"></param>
            <param name="clientStream"></param>
        </member>
        <member name="T:Realm.Library.Network.Mxp.MxpFormatter">
            <summary>
            Handles the formatting of string data into a MXP compatible string
            </summary>
        </member>
        <member name="M:Realm.Library.Network.Mxp.MxpFormatter.Format(System.String)">
            <summary>
            MxpFormatter takes the input string and formats it for Mxp-compatibility
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Realm.Library.Network.NetworkEventArgs">
            <summary>
            EventArgs class for event handling in the Network library
            </summary>
        </member>
        <member name="P:Realm.Library.Network.NetworkEventArgs.SocketStatus">
            <summary>
            Gets the status of the Tcp Socket in the event
            </summary>
        </member>
        <member name="P:Realm.Library.Network.NetworkEventArgs.Message">
            <summary>
            Gets the message associated with the event
            </summary>
        </member>
        <member name="P:Realm.Library.Network.NetworkEventArgs.ServerStatus">
            <summary>
            Gets the status of the Tcp Server in the event
            </summary>
        </member>
        <member name="T:Realm.Library.Network.NetworkExtensions">
            <summary>
            Defines extensions to various network functions and objects
            </summary>
        </member>
        <member name="M:Realm.Library.Network.NetworkExtensions.ConvertToIpAddress(System.String)">
            <summary>
            Converts the given string to an actual Ip Address structure.
            If the IP isn't valid return "localhost" as the default.
            </summary>
            <param name="ipAddress"></param>
            <returns></returns>
        </member>
        <member name="T:Realm.Library.Network.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.ERR_NO_TCPUSER">
            <summary>
              Looks up a localized string similar to TcpUser was not found.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.ERR_NULL_PARAMETER">
            <summary>
              Looks up a localized string similar to Parameter is null.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.LOCALHOST_IP">
            <summary>
              Looks up a localized string similar to 127.0.0.1.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.MSG_CONNECTION_LOST">
            <summary>
              Looks up a localized string similar to Connection Lost from {0}.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.MSG_TCPSERVER_LISTEN">
            <summary>
              Looks up a localized string similar to TcpServer Listening on {0}.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.MSG_TCPSERVER_START">
            <summary>
              Looks up a localized string similar to TcpServer starting up on port {0}.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.MSG_TCPSERVER_STATE">
            <summary>
              Looks up a localized string similar to Listener Thread state {0}.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.MSG_TCPSERVER_STOP">
            <summary>
              Looks up a localized string similar to TcpServer Shutdown..
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.MSG_TCPUSER_CONNECT">
            <summary>
              Looks up a localized string similar to TcpClient[{0}, {1}] connected..
            </summary>
        </member>
        <member name="P:Realm.Library.Network.Properties.Resources.MSG_TCPUSER_DISCONNECT">
            <summary>
              Looks up a localized string similar to Client[{0}, {1}] disconnected..
            </summary>
        </member>
        <member name="T:Realm.Library.Network.TcpServerStatus">
            <summary>
            Enumeration of Server Status states
            </summary>
        </member>
        <member name="F:Realm.Library.Network.TcpServerStatus.Starting">
            <summary>
            Tcp Server is Starting Up
            </summary>
        </member>
        <member name="F:Realm.Library.Network.TcpServerStatus.Listening">
            <summary>
            Tcp Server is Listening for incoming Sockets
            </summary>
        </member>
        <member name="F:Realm.Library.Network.TcpServerStatus.ShuttingDown">
            <summary>
            Tcp Server is Shutting Down
            </summary>
        </member>
        <member name="F:Realm.Library.Network.TcpServerStatus.Shutdown">
            <summary>
            Tcp Server is shutdown and not accepting new sockets
            </summary>
        </member>
        <member name="T:Realm.Library.Network.TcpSocketStatus">
            <summary>
            Enumeration of Socket Status values
            </summary>
        </member>
        <member name="F:Realm.Library.Network.TcpSocketStatus.Connected">
            <summary>
            Tcp Socket is in the Connected state
            </summary>
        </member>
        <member name="F:Realm.Library.Network.TcpSocketStatus.Disconnected">
            <summary>
            Tcp Socket is in the Disconnected state
            </summary>
        </member>
        <member name="T:Realm.Library.Network.TcpUserRepository">
            <summary>
            Repository class used to track TcpUsers
            </summary>
        </member>
        <member name="T:Realm.Library.Network.TcpClientWrapper">
            <summary>
            Abstract class wraps the TcpClient and exposes additional functionality
            </summary>
        </member>
        <member name="M:Realm.Library.Network.TcpClientWrapper.#ctor(Realm.Library.Common.Logging.ILogWrapper,System.Net.Sockets.TcpClient,Realm.Library.Network.IFormatter)">
            <summary>
            Constructor
            </summary>
            <param name="log"></param>
            <param name="tcpClient"></param>
            <param name="formatter"></param>
        </member>
        <member name="M:Realm.Library.Network.TcpClientWrapper.WriteToBuffer(System.String)">
            <summary>
            Writes a given message to the buffer which will be queued to send to the client stream.
            </summary>
        </member>
        <member name="P:Realm.Library.Network.TcpClientWrapper.Log">
            <summary>
            Gets a reference to the ILog interface
            </summary>
        </member>
        <member name="P:Realm.Library.Network.TcpClientWrapper.TcpClient">
            <summary>
            Gets a reference to the TcpClient attached to this object
            </summary>
        </member>
        <member name="P:Realm.Library.Network.TcpClientWrapper.Formatter">
             <summary>
            
             </summary>
        </member>
        <member name="P:Realm.Library.Network.TcpClientWrapper.IpAddress">
            <summary>
            Gets the IpAddress of the connected user
            </summary>
        </member>
        <member name="P:Realm.Library.Network.TcpClientWrapper.ConnectedOn">
            <summary>
            Gets the datetime when a connection occurred
            </summary>
        </member>
        <member name="P:Realm.Library.Network.TcpClientWrapper.ClientStream">
            <summary>
            Gets a reference to the NetworkStream object
            </summary>
        </member>
        <member name="T:Realm.Library.Network.TcpServer">
            <summary>
            Tcp Server class handles the listening socket and management of Tcp Users
            </summary>
        </member>
        <member name="M:Realm.Library.Network.TcpServer.#ctor(Realm.Library.Common.Logging.ILogWrapper,Realm.Library.Network.ITcpUserRepository)">
            <summary>
            Constructor
            </summary>
            <param name="log"></param>
            <param name="repository"></param>
        </member>
        <member name="M:Realm.Library.Network.TcpServer.GetTcpUser(System.String)">
            <summary>
            Gets a tcpUser by Ip address
            </summary>
            <param name="ipAddress"></param>
            <returns></returns>
        </member>
        <member name="M:Realm.Library.Network.TcpServer.Startup(System.Int32,System.Net.IPAddress)">
            <summary>
            Attempts to start the server on the given port and host address
            </summary>
            <param name="port"></param>
            <param name="host"></param>
        </member>
        <member name="M:Realm.Library.Network.TcpServer.Shutdown(System.String)">
            <summary>
            Shuts the server down
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Realm.Library.Network.TcpServer.DisconnectUser(System.String)">
            <summary>
            Disconnects a given user by unique id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:Realm.Library.Network.TcpServer.Status">
             <summary>
            
             </summary>
        </member>
        <member name="E:Realm.Library.Network.TcpServer.OnTcpUserStatusChanged">
            <summary>
            Event on a TcpUser status change
            </summary>
        </member>
        <member name="E:Realm.Library.Network.TcpServer.OnTcpServerStatusChanged">
            <summary>
            Event on a TcpServer status change
            </summary>
        </member>
        <member name="E:Realm.Library.Network.TcpServer.OnNetworkMessageReceived">
            <summary>
            Event on a TcpServer status change
            </summary>
        </member>
        <member name="T:Realm.Library.Network.TcpUser">
            <summary>
            Tcp User class handles tcp communication
            </summary>
        </member>
        <member name="M:Realm.Library.Network.TcpUser.#ctor(Realm.Library.Common.Logging.ILogWrapper,System.Net.Sockets.TcpClient,Realm.Library.Network.IFormatter)">
            <summary>
            Constructor
            </summary>
            <param name="log"></param>
            <param name="tcpClient"></param>
            <param name="formatter"></param>
        </member>
        <member name="M:Realm.Library.Network.TcpUser.OnConnect">
            <summary>
            Handles the connection
            </summary>
        </member>
        <member name="M:Realm.Library.Network.TcpUser.Disconnect">
            <summary>
            Disconnects the user from the connected socket
            </summary>
        </member>
        <member name="P:Realm.Library.Network.TcpUser.Id">
            <summary>
            Gets the unique identifier of this user
            </summary>
        </member>
        <member name="T:Realm.Library.Network.TextFormatter">
            <summary>
            Handles the formatting of string data as text
            </summary>
        </member>
        <member name="M:Realm.Library.Network.TextFormatter.Format(System.String)">
            <summary>
            Text formatter does nothing at this time and simply returns the input string
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
    </members>
</doc>
